"use strict";var ae=Object.create;var f=Object.defineProperty;var ne=Object.getOwnPropertyDescriptor;var te=Object.getOwnPropertyNames,w=Object.getOwnPropertySymbols,ie=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty,G=Object.prototype.propertyIsEnumerable;var I=(e,a,n)=>a in e?f(e,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[a]=n,g=(e,a)=>{for(var n in a||(a={}))x.call(a,n)&&I(e,n,a[n]);if(w)for(var n of w(a))G.call(a,n)&&I(e,n,a[n]);return e};var K=(e,a)=>{var n={};for(var t in e)x.call(e,t)&&a.indexOf(t)<0&&(n[t]=e[t]);if(e!=null&&w)for(var t of w(e))a.indexOf(t)<0&&G.call(e,t)&&(n[t]=e[t]);return n};var A=(e,a)=>()=>(a||e((a={exports:{}}).exports,a),a.exports),me=(e,a)=>{for(var n in a)f(e,n,{get:a[n],enumerable:!0})},z=(e,a,n,t)=>{if(a&&typeof a=="object"||typeof a=="function")for(let o of te(a))!x.call(e,o)&&o!==n&&f(e,o,{get:()=>a[o],enumerable:!(t=ne(a,o))||t.enumerable});return e};var $=(e,a,n)=>(n=e!=null?ae(ie(e)):{},z(a||!e||!e.__esModule?f(n,"default",{value:e,enumerable:!0}):n,e)),re=e=>z(f({},"__esModule",{value:!0}),e);var y=(e,a,n)=>new Promise((t,o)=>{var N=i=>{try{m(n.next(i))}catch(s){o(s)}},r=i=>{try{m(n.throw(i))}catch(s){o(s)}},m=i=>i.done?t(i.value):Promise.resolve(i.value).then(N,r);m((n=n.apply(e,a)).next())});var D=A((le,M)=>{var oe={aa:{name:"Afar",nativeName:"Afaraf"},ab:{name:"Abkhaz",nativeName:"\u0430\u04A7\u0441\u0443\u0430 \u0431\u044B\u0437\u0448\u04D9\u0430"},ae:{name:"Avestan",nativeName:"avesta"},af:{name:"Afrikaans",nativeName:"Afrikaans"},ak:{name:"Akan",nativeName:"Akan"},am:{name:"Amharic",nativeName:"\u12A0\u121B\u122D\u129B"},an:{name:"Aragonese",nativeName:"aragon\xE9s"},ar:{name:"Arabic",nativeName:"\u0627\u064E\u0644\u0652\u0639\u064E\u0631\u064E\u0628\u0650\u064A\u064E\u0651\u0629\u064F"},as:{name:"Assamese",nativeName:"\u0985\u09B8\u09AE\u09C0\u09AF\u09BC\u09BE"},av:{name:"Avaric",nativeName:"\u0430\u0432\u0430\u0440 \u043C\u0430\u0446\u04C0"},ay:{name:"Aymara",nativeName:"aymar aru"},az:{name:"Azerbaijani",nativeName:"az\u0259rbaycan dili"},ba:{name:"Bashkir",nativeName:"\u0431\u0430\u0448\u04A1\u043E\u0440\u0442 \u0442\u0435\u043B\u0435"},be:{name:"Belarusian",nativeName:"\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F \u043C\u043E\u0432\u0430"},bg:{name:"Bulgarian",nativeName:"\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438 \u0435\u0437\u0438\u043A"},bi:{name:"Bislama",nativeName:"Bislama"},bm:{name:"Bambara",nativeName:"bamanankan"},bn:{name:"Bengali",nativeName:"\u09AC\u09BE\u0982\u09B2\u09BE"},bo:{name:"Tibetan",nativeName:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},br:{name:"Breton",nativeName:"brezhoneg"},bs:{name:"Bosnian",nativeName:"bosanski jezik"},ca:{name:"Catalan",nativeName:"Catal\xE0"},ce:{name:"Chechen",nativeName:"\u043D\u043E\u0445\u0447\u0438\u0439\u043D \u043C\u043E\u0442\u0442"},ch:{name:"Chamorro",nativeName:"Chamoru"},co:{name:"Corsican",nativeName:"corsu"},cr:{name:"Cree",nativeName:"\u14C0\u1426\u1403\u152D\u140D\u140F\u1423"},cs:{name:"Czech",nativeName:"\u010De\u0161tina"},cu:{name:"Old Church Slavonic",nativeName:"\u0469\u0437\u044B\u043A\u044A \u0441\u043B\u043E\u0432\u0463\u043D\u044C\u0441\u043A\u044A"},cv:{name:"Chuvash",nativeName:"\u0447\u04D1\u0432\u0430\u0448 \u0447\u04D7\u043B\u0445\u0438"},cy:{name:"Welsh",nativeName:"Cymraeg"},da:{name:"Danish",nativeName:"dansk"},de:{name:"German",nativeName:"Deutsch"},dv:{name:"Divehi",nativeName:"\u078B\u07A8\u0788\u07AC\u0780\u07A8"},dz:{name:"Dzongkha",nativeName:"\u0F62\u0FAB\u0F7C\u0F44\u0F0B\u0F41"},ee:{name:"Ewe",nativeName:"E\u028Begbe"},el:{name:"Greek",nativeName:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC"},en:{name:"English",nativeName:"English"},eo:{name:"Esperanto",nativeName:"Esperanto"},es:{name:"Spanish",nativeName:"Espa\xF1ol"},et:{name:"Estonian",nativeName:"eesti"},eu:{name:"Basque",nativeName:"euskara"},fa:{name:"Persian",nativeName:"\u0641\u0627\u0631\u0633\u06CC"},ff:{name:"Fula",nativeName:"Fulfulde"},fi:{name:"Finnish",nativeName:"suomi"},fj:{name:"Fijian",nativeName:"vosa Vakaviti"},fo:{name:"Faroese",nativeName:"f\xF8royskt"},fr:{name:"French",nativeName:"Fran\xE7ais"},fy:{name:"Western Frisian",nativeName:"Frysk"},ga:{name:"Irish",nativeName:"Gaeilge"},gd:{name:"Scottish Gaelic",nativeName:"G\xE0idhlig"},gl:{name:"Galician",nativeName:"galego"},gn:{name:"Guaran\xED",nativeName:"Ava\xF1e'\u1EBD"},gu:{name:"Gujarati",nativeName:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0"},gv:{name:"Manx",nativeName:"Gaelg"},ha:{name:"Hausa",nativeName:"\u0647\u064E\u0648\u064F\u0633\u064E"},he:{name:"Hebrew",nativeName:"\u05E2\u05D1\u05E8\u05D9\u05EA"},hi:{name:"Hindi",nativeName:"\u0939\u093F\u0928\u094D\u0926\u0940"},ho:{name:"Hiri Motu",nativeName:"Hiri Motu"},hr:{name:"Croatian",nativeName:"Hrvatski"},ht:{name:"Haitian",nativeName:"Krey\xF2l ayisyen"},hu:{name:"Hungarian",nativeName:"magyar"},hy:{name:"Armenian",nativeName:"\u0540\u0561\u0575\u0565\u0580\u0565\u0576"},hz:{name:"Herero",nativeName:"Otjiherero"},ia:{name:"Interlingua",nativeName:"Interlingua"},id:{name:"Indonesian",nativeName:"Bahasa Indonesia"},ie:{name:"Interlingue",nativeName:"Interlingue"},ig:{name:"Igbo",nativeName:"As\u1EE5s\u1EE5 Igbo"},ii:{name:"Nuosu",nativeName:"\uA188\uA320\uA4BF Nuosuhxop"},ik:{name:"Inupiaq",nativeName:"I\xF1upiaq"},io:{name:"Ido",nativeName:"Ido"},is:{name:"Icelandic",nativeName:"\xCDslenska"},it:{name:"Italian",nativeName:"Italiano"},iu:{name:"Inuktitut",nativeName:"\u1403\u14C4\u1483\u144E\u1450\u1466"},ja:{name:"Japanese",nativeName:"\u65E5\u672C\u8A9E"},jv:{name:"Javanese",nativeName:"basa Jawa"},ka:{name:"Georgian",nativeName:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8"},kg:{name:"Kongo",nativeName:"Kikongo"},ki:{name:"Kikuyu",nativeName:"G\u0129k\u0169y\u0169"},kj:{name:"Kwanyama",nativeName:"Kuanyama"},kk:{name:"Kazakh",nativeName:"\u049B\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456"},kl:{name:"Kalaallisut",nativeName:"kalaallisut"},km:{name:"Khmer",nativeName:"\u1781\u17C1\u1798\u179A\u1797\u17B6\u179F\u17B6"},kn:{name:"Kannada",nativeName:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1"},ko:{name:"Korean",nativeName:"\uD55C\uAD6D\uC5B4"},kr:{name:"Kanuri",nativeName:"Kanuri"},ks:{name:"Kashmiri",nativeName:"\u0915\u0936\u094D\u092E\u0940\u0930\u0940"},ku:{name:"Kurdish",nativeName:"Kurd\xEE"},kv:{name:"Komi",nativeName:"\u043A\u043E\u043C\u0438 \u043A\u044B\u0432"},kw:{name:"Cornish",nativeName:"Kernewek"},ky:{name:"Kyrgyz",nativeName:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},la:{name:"Latin",nativeName:"latine"},lb:{name:"Luxembourgish",nativeName:"L\xEBtzebuergesch"},lg:{name:"Ganda",nativeName:"Luganda"},li:{name:"Limburgish",nativeName:"Limburgs"},ln:{name:"Lingala",nativeName:"Ling\xE1la"},lo:{name:"Lao",nativeName:"\u0E9E\u0EB2\u0EAA\u0EB2\u0EA5\u0EB2\u0EA7"},lt:{name:"Lithuanian",nativeName:"lietuvi\u0173 kalba"},lu:{name:"Luba-Katanga",nativeName:"Kiluba"},lv:{name:"Latvian",nativeName:"latvie\u0161u valoda"},mg:{name:"Malagasy",nativeName:"fiteny malagasy"},mh:{name:"Marshallese",nativeName:"Kajin M\u0327aje\u013C"},mi:{name:"M\u0101ori",nativeName:"te reo M\u0101ori"},mk:{name:"Macedonian",nativeName:"\u043C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438 \u0458\u0430\u0437\u0438\u043A"},ml:{name:"Malayalam",nativeName:"\u0D2E\u0D32\u0D2F\u0D3E\u0D33\u0D02"},mn:{name:"Mongolian",nativeName:"\u041C\u043E\u043D\u0433\u043E\u043B \u0445\u044D\u043B"},mr:{name:"Marathi",nativeName:"\u092E\u0930\u093E\u0920\u0940"},ms:{name:"Malay",nativeName:"Bahasa Melayu"},mt:{name:"Maltese",nativeName:"Malti"},my:{name:"Burmese",nativeName:"\u1017\u1019\u102C\u1005\u102C"},na:{name:"Nauru",nativeName:"Dorerin Naoero"},nb:{name:"Norwegian Bokm\xE5l",nativeName:"Norsk bokm\xE5l"},nd:{name:"Northern Ndebele",nativeName:"isiNdebele"},ne:{name:"Nepali",nativeName:"\u0928\u0947\u092A\u093E\u0932\u0940"},ng:{name:"Ndonga",nativeName:"Owambo"},nl:{name:"Dutch",nativeName:"Nederlands"},nn:{name:"Norwegian Nynorsk",nativeName:"Norsk nynorsk"},no:{name:"Norwegian",nativeName:"Norsk"},nr:{name:"Southern Ndebele",nativeName:"isiNdebele"},nv:{name:"Navajo",nativeName:"Din\xE9 bizaad"},ny:{name:"Chichewa",nativeName:"chiChe\u0175a"},oc:{name:"Occitan",nativeName:"occitan"},oj:{name:"Ojibwe",nativeName:"\u140A\u14C2\u1511\u14C8\u142F\u14A7\u140E\u14D0"},om:{name:"Oromo",nativeName:"Afaan Oromoo"},or:{name:"Oriya",nativeName:"\u0B13\u0B21\u0B3C\u0B3F\u0B06"},os:{name:"Ossetian",nativeName:"\u0438\u0440\u043E\u043D \xE6\u0432\u0437\u0430\u0433"},pa:{name:"Panjabi",nativeName:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},pi:{name:"P\u0101li",nativeName:"\u092A\u093E\u0934\u093F"},pl:{name:"Polish",nativeName:"Polski"},ps:{name:"Pashto",nativeName:"\u067E\u069A\u062A\u0648"},pt:{name:"Portuguese",nativeName:"Portugu\xEAs"},qu:{name:"Quechua",nativeName:"Runa Simi"},rm:{name:"Romansh",nativeName:"rumantsch grischun"},rn:{name:"Kirundi",nativeName:"Ikirundi"},ro:{name:"Romanian",nativeName:"Rom\xE2n\u0103"},ru:{name:"Russian",nativeName:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},rw:{name:"Kinyarwanda",nativeName:"Ikinyarwanda"},sa:{name:"Sanskrit",nativeName:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D"},sc:{name:"Sardinian",nativeName:"sardu"},sd:{name:"Sindhi",nativeName:"\u0938\u093F\u0928\u094D\u0927\u0940"},se:{name:"Northern Sami",nativeName:"Davvis\xE1megiella"},sg:{name:"Sango",nativeName:"y\xE2ng\xE2 t\xEE s\xE4ng\xF6"},si:{name:"Sinhala",nativeName:"\u0DC3\u0DD2\u0D82\u0DC4\u0DBD"},sk:{name:"Slovak",nativeName:"sloven\u010Dina"},sl:{name:"Slovenian",nativeName:"sloven\u0161\u010Dina"},sm:{name:"Samoan",nativeName:"gagana fa'a Samoa"},sn:{name:"Shona",nativeName:"chiShona"},so:{name:"Somali",nativeName:"Soomaaliga"},sq:{name:"Albanian",nativeName:"Shqip"},sr:{name:"Serbian",nativeName:"\u0441\u0440\u043F\u0441\u043A\u0438 \u0458\u0435\u0437\u0438\u043A"},ss:{name:"Swati",nativeName:"SiSwati"},st:{name:"Southern Sotho",nativeName:"Sesotho"},su:{name:"Sundanese",nativeName:"Basa Sunda"},sv:{name:"Swedish",nativeName:"Svenska"},sw:{name:"Swahili",nativeName:"Kiswahili"},ta:{name:"Tamil",nativeName:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD"},te:{name:"Telugu",nativeName:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41"},tg:{name:"Tajik",nativeName:"\u0442\u043E\u04B7\u0438\u043A\u04E3"},th:{name:"Thai",nativeName:"\u0E44\u0E17\u0E22"},ti:{name:"Tigrinya",nativeName:"\u1275\u130D\u122D\u129B"},tk:{name:"Turkmen",nativeName:"T\xFCrkmen\xE7e"},tl:{name:"Tagalog",nativeName:"Wikang Tagalog"},tn:{name:"Tswana",nativeName:"Setswana"},to:{name:"Tonga",nativeName:"faka Tonga"},tr:{name:"Turkish",nativeName:"T\xFCrk\xE7e"},ts:{name:"Tsonga",nativeName:"Xitsonga"},tt:{name:"Tatar",nativeName:"\u0442\u0430\u0442\u0430\u0440 \u0442\u0435\u043B\u0435"},tw:{name:"Twi",nativeName:"Twi"},ty:{name:"Tahitian",nativeName:"Reo Tahiti"},ug:{name:"Uyghur",nativeName:"\u0626\u06C7\u064A\u063A\u06C7\u0631\u0686\u06D5\u200E"},uk:{name:"Ukrainian",nativeName:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430"},ur:{name:"Urdu",nativeName:"\u0627\u0631\u062F\u0648"},uz:{name:"Uzbek",nativeName:"\u040E\u0437\u0431\u0435\u043A"},ve:{name:"Venda",nativeName:"Tshiven\u1E13a"},vi:{name:"Vietnamese",nativeName:"Ti\u1EBFng Vi\u1EC7t"},vo:{name:"Volap\xFCk",nativeName:"Volap\xFCk"},wa:{name:"Walloon",nativeName:"walon"},wo:{name:"Wolof",nativeName:"Wollof"},xh:{name:"Xhosa",nativeName:"isiXhosa"},yi:{name:"Yiddish",nativeName:"\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9"},yo:{name:"Yoruba",nativeName:"Yor\xF9b\xE1"},za:{name:"Zhuang",nativeName:"Sa\u026F cue\u014B\u0185"},zh:{name:"Chinese",nativeName:"\u4E2D\u6587"},zu:{name:"Zulu",nativeName:"isiZulu"}};M.exports=oe});var q=A((ge,_)=>{var d=D(),P={},S={},R=[],B=[],U=[];for(let e in d){let{name:a,nativeName:n}=d[e];P[e]=S[a.toLowerCase()]=S[n.toLowerCase()]={code:e,name:a,nativeName:n},R.push(e),B.push(a),U.push(n)}_.exports=class b{static getLanguages(a=[]){return a.map(n=>b.validate(n)?Object.assign({},P[n]):{code:n,name:"",nativeName:""})}static getName(a){return b.validate(a)?d[a].name:""}static getAllNames(){return B.slice()}static getNativeName(a){return b.validate(a)?d[a].nativeName:""}static getAllNativeNames(){return U.slice()}static getCode(a){return a=a.toLowerCase(),S.hasOwnProperty(a)?S[a].code:""}static getAllCodes(){return R.slice()}static validate(a){return d.hasOwnProperty(a)}}});var F=A((ce,L)=>{"use strict";function J(){var e=Object.create(null),a=0,n=0,t=0,o=!1;this.put=function(r,m,i,s){if(o&&console.log("caching: %s = %j (@%s)",r,m,i),typeof i!="undefined"&&(typeof i!="number"||isNaN(i)||i<=0))throw new Error("Cache timeout must be a positive number");if(typeof s!="undefined"&&typeof s!="function")throw new Error("Cache timeout callback must be a function");var u=e[r];u?clearTimeout(u.timeout):t++;var v={value:m,expire:i+Date.now()};return isNaN(v.expire)||(v.timeout=setTimeout(function(){N(r),s&&s(r,m)}.bind(this),i)),e[r]=v,m},this.del=function(r){var m=!0,i=e[r];return i?(clearTimeout(i.timeout),!isNaN(i.expire)&&i.expire<Date.now()&&(m=!1)):m=!1,m&&N(r),m};function N(r){t--,delete e[r]}this.clear=function(){for(var r in e)clearTimeout(e[r].timeout);t=0,e=Object.create(null),o&&(a=0,n=0)},this.get=function(r){var m=e[r];if(typeof m!="undefined"){if(isNaN(m.expire)||m.expire>=Date.now())return o&&a++,m.value;o&&n++,t--,delete e[r]}else o&&n++;return null},this.size=function(){return t},this.memsize=function(){var r=0,m;for(m in e)r++;return r},this.debug=function(r){o=r},this.hits=function(){return a},this.misses=function(){return n},this.keys=function(){return Object.keys(e)},this.exportJson=function(){var r={};for(var m in e){var i=e[m];r[m]={value:i.value,expire:i.expire||"NaN"}}return JSON.stringify(r)},this.importJson=function(r,m){var i=JSON.parse(r),s=Date.now(),u=m&&m.skipDuplicates;for(var v in i)if(i.hasOwnProperty(v)){if(u){var c=e[v];if(c){o&&console.log("Skipping duplicate imported key '%s'",v);continue}}var h=i[v],l=h.expire-s;if(l<=0){this.del(v);continue}l=l>0?l:void 0,this.put(v,h.value,l)}return this.size()}}L.exports=new J;L.exports.Cache=J});var Ne={};me(Ne,{Languages:()=>ve,default:()=>se,translate:()=>Q});module.exports=re(Ne);var E=$(q()),T=$(F());var H={needkey:!0,fetch:({key:e,from:a,to:n,text:t})=>[new URL("v2/translate",`https://api${/:fx$/.test(e)?"-free":""}.deepl.com`),{method:"POST",headers:{Authorization:`DeepL-Auth-Key ${e}`,"Content-Type":"application/json"},body:JSON.stringify(g({text:[t],target_lang:n},a?{source_lang:a}:{}))}],extraSourceLanguages:[""],parse:e=>y(void 0,null,function*(){if(e.ok)return e.json().then(a=>a.translations[0].text);throw e.status===403?new Error("auth error. check your DeepL API key."):new Error(`error ${e.status}`)})};var V={needkey:!1,fetch:({from:e,to:a,text:n})=>[new URL(`translate_a/single?client=gtx&sl=${e}&tl=${a}&dt=t&q=${n}`,"https://translate.googleapis.com")],parse:e=>e.json().then(a=>{let n=a,t=n&&n[0]&&n[0][0]&&n[0].map(o=>o[0]).join("");if(!t)throw new Error("translation not found");return t})};var W={needkey:!1,fetch:({url:e,key:a,from:n,to:t,text:o})=>[new URL("translate",e||"https://libretranslate.com"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(g({q:o,source:n,target:t},a?{api_key:a}:{}))}],extraSourceLanguages:["auto"],parse:e=>e.json().then(a=>{let n=a;if(!(n!=null&&n.translatedText))throw new Error("no response");if(n.error)throw new Error(n.error);return n.translatedText})};var Y={needkey:!1,fetch:({url:e,from:a,to:n,text:t})=>[new URL(`api/v1/${a}/${n}/${t}`,e||"https://lingva.ml")],extraSourceLanguages:["auto"],parse:e=>e.json().then(a=>{let n=a;if(!(n!=null&&n.translation))throw new Error("no response");if(n.error)throw new Error(n.error);return n.translation})};var X={needkey:!0,fetch:({key:e,from:a,to:n,text:t})=>[new URL(`api/v1.5/tr.json/translate?key=${e}&lang=${a}-${n}&text=${t}`,"https://translate.yandex.net"),{method:"POST"}],parse:e=>e.json().then(a=>{let n=a;if(n.code!==200)throw new Error(n.message);return n.text[0]})};var Z={deepl:H,google:V,libre:W,lingva:Y,yandex:X};var Q=(e,a)=>y(void 0,null,function*(){var p,C,k,O;let j=g({from:"en",to:"en",engine:"google"},typeof a=="string"?{to:a}:a),{url:n,key:t,cache:o}=j,N=K(j,["url","key","cache"]),r=g(g({},Z),N.engines),m=N.engine||"google",i=r[m];if(!i)throw new Error(`invalid engine ${String(m)}`);let s=N.from||typeof N.from=="string"?N.from:"en",u=((C=(p=i.extraSourceLanguages)==null?void 0:p.includes)==null?void 0:C.call(p,s))&&s||E.default.getCode(s)||"en",v=N.to||typeof N.to=="string"?N.to:"en",c=((O=(k=i.extraTargetLanguages)==null?void 0:k.includes)==null?void 0:O.call(k,v))&&v||E.default.getCode(v)||"en";if(u===c)return e;let h=`${n}:${u}:${c}:${String(m)}:${e}`,l=T.default.get(h);if(l)return l;if(i.needkey&&!t)throw new Error(`engine ${String(m)} requires an API key`);return fetch(...i.fetch({from:u,to:c,key:t,url:n,text:e})).then(i.parse).then(ee=>T.default.put(h,ee,o))}),se=Q,ve=E.default;0&&(module.exports={Languages,translate});
